*psql.txt*                                                   psql.nvim plugin documentation

==============================================================================
CONTENTS                                                             *psql-contents*

  1. Введение.................................................|psql-introduction|
  2. Установка................................................|psql-installation|
  3. Конфигурация.............................................|psql-configuration|
     - Пример конфигурации....................................|psql-config-example|
     - Параметры..............................................|psql-config-options|
  4. Использование............................................|psql-usage|
     - Команды................................................|psql-commands|
  5. Безопасность.............................................|psql-security|
  6. Решение проблем..........................................|psql-troubleshooting|

==============================================================================
1. Введение                                               *psql-introduction*

*psql.nvim* — это легковесный плагин для Neovim, который позволяет работать
с базами данных PostgreSQL напрямую из редактора. Он создан, чтобы избавить
вас от необходимости использовать внешние утилиты для управления подключениями
и выполнять запросы, полностью интегрируя этот процесс в среду Neovim.

Основные возможности:
- Управление подключениями без внешних зависимостей (кроме `psql`).
- Простая и понятная конфигурация через Lua.
- Быстрый запуск интерактивной консоли `psql`.
- Выполнение SQL-запросов из буфера с выводом результата в новый сплит.

==============================================================================
2. Установка                                           *psql-installation*

Для установки рекомендуется использовать менеджер плагинов, например, `lazy.nvim`.

Пример для `lazy.nvim`:
>lua
-- lua/plugins/psql.lua
return {
  'your-github-username/psql.nvim',
  cmd = { 'Psql', 'PsqlExec', 'PsqlListDBs' },
  config = function()
    require('psql').setup({
      -- ваша конфигурация здесь
    })
  end,
}
<
Замените `'your-github-username/psql.nvim'` на реальный путь к репозиторию.

==============================================================================
3. Конфигурация                                       *psql-configuration*

Конфигурация плагина осуществляется вызовом функции `setup`.

*psql-config-example*
Пример полной конфигурации:
>lua
require('psql').setup({
  -- Список ваших подключений к базам данных
  connections = {
    {
      name = "Локальная БД",
      -- Можно использовать стандартный URL-адрес PostgreSQL
      url = "postgresql://user:password@localhost:5432/mydatabase",
    },
    {
      name = "Рабочий Staging (без пароля)",
      -- Или определить параметры подключения по отдельности
      host = "staging.example.com",
      port = 5432,
      user = "readonly_user",
      dbname = "staging_db",
    },
  },

  -- КРАЙНЕ рекомендуется изменить этот ключ!
  -- Он используется для простого шифрования паролей.
  crypto_key = 'мой-супер-секретный-и-уникальный-ключ',

  -- Определяет, как отображаются результаты запросов.
  -- Возможные значения: 'split', 'vsplit', 'term'.
  runner_output = 'split',
})
<

*psql-config-options*
Детальное описание параметров:

`connections`
  (table) Список ваших подключений. Каждое подключение — это таблица,
  которая должна содержать:
  - `name` (string): Уникальное имя для подключения, которое будет
    отображаться в меню выбора.
  - ИЛИ `url` (string): Стандартный URL-адрес подключения PostgreSQL.
  - ИЛИ набор полей: `host`, `port`, `user`, `password`, `dbname`.

`crypto_key`
  (string) Секретный ключ, используемый для шифрования паролей.
  Это **не замена** безопасному хранилищу вроде системной связки ключей
  или Vault. Ключ лишь предотвращает хранение паролей в открытом виде
  в вашем конфигурационном файле. **Вы должны изменить значение по умолчанию.**

`runner_output`
  (string) Определяет, где будет показан результат выполнения неинтерактивных
  запросов (например, через |:PsqlExec|).
  - `'split'`: В новом горизонтальном сплите (по умолчанию).
  - `'vsplit'`: В новом вертикальном сплите.
  - `'term'`: В новом окне терминала.

==============================================================================
4. Использование                                                 *psql-usage*

*psql-commands*
Плагин предоставляет три основные команды:

*:Psql*
  Открывает окно выбора (`vim.ui.select`) со списком настроенных подключений.
  После выбора открывает интерактивную консоль `psql` для этой базы данных
  в новом окне терминала Neovim.

*:PsqlExec*
  Выполняет всё содержимое текущего буфера как SQL-запрос. Сначала плагин
  попросит вас выбрать, к какой базе данных подключиться. Результат будет
  отображен в соответствии с настройкой `runner_output`.

*:PsqlListDBs*
  Удобная команда для просмотра списка всех баз данных на выбранном сервере.
  Выполняет команду `\l` в `psql`.

==============================================================================
5. Безопасность                                               *psql-security*

Пароли, указанные в конфигурации, не хранятся в памяти в открытом виде после
загрузки. Они шифруются с помощью простого XOR-алгоритма с использованием
вашего `crypto_key`.

**ВАЖНО**: Этот метод является обфускацией (маскировкой), а не надежным
шифрованием. Он защищает только от случайного просмотра вашего файла
конфигурации. Не используйте этот метод для хранения критически важных
паролей в публичных репозиториях. Для максимальной безопасности рассмотрите
возможность интеграции с системными хранилищами секретов.

==============================================================================
6. Решение проблем                                     *psql-troubleshooting*

`PSQL: 'psql' command not found in your PATH.`
  Эта ошибка означает, что плагин не может найти утилиту `psql`. Убедитесь,
  что PostgreSQL установлен и путь к его исполняемым файлам (`bin`) добавлен
  в системную переменную `PATH`.

`PSQL: No connections configured. See :h psql.nvim for help.`
  Эта ошибка означает, что список `connections` в вашей конфигурации пуст
  или не задан. Откройте ваш конфигурационный файл и убедитесь, что вы
  правильно настроили хотя бы одно подключение внутри функции `setup`.
  См. |psql-config-example|.

vim:tw=78:ts=8:sw=2:sts=2:et:ft=help:norl:
